pipeline {
    agent none

    options {
        timestamps()
    }

    parameters{
        choice choices: ['Release', 'Debug'], description: '', name: 'BUILD_TYPE'
    }

    environment {
        PROJECT_NAME = "milvus"
        LOWER_BUILD_TYPE = params.BUILD_TYPE.toLowerCase()
    }

    stages {
        stage("Ubuntu 16.04") {
            stages {
                stage("Run Build") {
                    agent {
                        kubernetes {
                            label 'build'
                            defaultContainer 'milvus-build-env'
                            yamlFile 'ci/pod_containers/milvus-build-env-pod.yaml'
                        }
                    }
                    stages {
                        stage('Build') {
                            steps {
                                sh 'echo "Build"'
                                sh("printenv")
                            }
                        }
                    }
                }

                stage("Publish docker and helm") {
                    agent {
                        kubernetes {
                            label 'publish'
                            defaultContainer 'publish-docker'
                            yamlFile 'ci/pod_containers/docker-pod.yaml'
                        }
                    }

                    environment {
                        SEMVER = "${env.GIT_BRANCH != null ? env.GIT_BRANCH : env.CHANGE_BRANCH}"
                        SUFFIX_VERSION_NAME = "${env.GIT_BRANCH.matches("PR-(.*)") ? env.GIT_COMMIT.substring(0, 6) : null}"
                        DOCKER_VERSION_STR = "${env.GIT_BRANCH.matches("PR-(.*)") ? "${SEMVER}-${LOWER_BUILD_TYPE}-${SUFFIX_VERSION_NAME}" : "${SEMVER}-${LOWER_BUILD_TYPE}"}" 
                    }

                    stages {
                        stage('Publish Docker') {
                            steps {
                                sh 'echo "Publish Docker"'
                                sh("printenv")
                            }
                        }
                    }
                }
            }
        }
    }
}

